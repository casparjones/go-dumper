name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/app/package-lock.json

    - name: Install frontend dependencies and build
      working-directory: web/app
      run: |
        npm ci
        npx vue-tsc --noEmit || true
        npx vite build

    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Build for different platforms
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-w -s" -o dist/go-dumper-linux-amd64 ./cmd/app
        GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -ldflags="-w -s" -o dist/go-dumper-linux-arm64 ./cmd/app
        GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-w -s" -o dist/go-dumper-darwin-amd64 ./cmd/app
        GOOS=darwin GOARCH=arm64 CGO_ENABLED=0 go build -ldflags="-w -s" -o dist/go-dumper-darwin-arm64 ./cmd/app
        GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-w -s" -o dist/go-dumper-windows-amd64.exe ./cmd/app

    - name: Create archives
      run: |
        cd dist
        
        # Create tar.gz for Unix systems
        tar -czf go-dumper-linux-amd64.tar.gz go-dumper-linux-amd64
        tar -czf go-dumper-linux-arm64.tar.gz go-dumper-linux-arm64
        tar -czf go-dumper-darwin-amd64.tar.gz go-dumper-darwin-amd64
        tar -czf go-dumper-darwin-arm64.tar.gz go-dumper-darwin-arm64
        
        # Create zip for Windows
        zip go-dumper-windows-amd64.zip go-dumper-windows-amd64.exe

    - name: Generate checksums
      run: |
        cd dist
        sha256sum *.tar.gz *.zip > checksums.txt

    - name: Generate changelog
      run: |
        echo "# Release Notes" > RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## What's Changed" >> RELEASE_NOTES.md
        git log --oneline --pretty=format:"* %s" $(git describe --tags --abbrev=0 HEAD~1)..HEAD >> RELEASE_NOTES.md || echo "* Initial release" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Docker Images" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "\`\`\`bash" >> RELEASE_NOTES.md
        echo "docker pull ghcr.io/${{ github.repository }}:${GITHUB_REF#refs/tags/}" >> RELEASE_NOTES.md
        echo "docker pull ghcr.io/${{ github.repository }}:latest" >> RELEASE_NOTES.md
        echo "\`\`\`" >> RELEASE_NOTES.md

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: RELEASE_NOTES.md
        files: |
          dist/*.tar.gz
          dist/*.zip
          dist/checksums.txt
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}